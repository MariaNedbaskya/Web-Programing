public static class Kata  
{  
//Боб работает водителем автобуса. Однако он стал чрезвычайно популярен среди жителей города. При таком количестве пассажиров, желающих сесть в его автобус, ему иногда приходится сталкиваться с проблемой нехватки места в автобусе! Он хочет, чтобы вы написали простую программу, сообщающую ему, сможет ли он вместить всех пассажиров.

//Обзор задачи:
//Вам необходимо написать функцию, которая принимает три параметра:

//capколичество людей, которое может вместить автобус, не считая водителя.
//onколичество людей в автобусе, не считая водителя.
//waitколичество людей, ожидающих посадки в автобус, не считая водителя.
//Если места достаточно, вернуть 0, а если нет, вернуть количество пассажиров, которых он не может взять.

//Примеры использования:
//cap = 10, on = 5, wait = 5 --> 0 # He can fit all 5 passengers
//cap = 100, on = 60, wait = 50 --> 10 # He can't fit 10 of the 50 waiting
//Документация:
//Метод Kata.Enough (Int32, Int32, Int32)
//Возвращает количество пассажиров, которых не может вместить автобус, или 0, если автобус может вместить всех пассажиров.

//Синтаксис

//public static int Enough(
//int cap,
//  int on,
//int wait
 // )

//Параметры
//cap
//Тип: System.Int32
//Количество людей, которые могут поместиться в автобусе, исключая водителя.

//on
//Тип: System.Int32
//Количество людей в автобусе, исключая водителя.

//wait
//Тип: System.Int32
//Количество людей, ожидающих входа в автобус.

//Возвращаемое значение
//Тип: System.Int32
//Целое число, представляющее, сколько пассажиров не могут поместиться в автобусе, или 0, если все пассажиры могут поместиться в автобусе.

    public static int Enough(int cap, int on, int wait)  
    {  
        int availableSpace = cap - on;
        int needToFit = wait - availableSpace; 
        return needToFit > 0 ? needToFit : 0;   
    }  
}
